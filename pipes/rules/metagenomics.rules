from os.path import join

samples = list(read_samples_file(config.get("samples_metagenomics")))

rule all_metagenomics:
    input:
        expand(join(config["data_dir"], config["subdirs"]["metagenomics"],
                    "{sample}.{method}.report"), sample=samples, method=['kraken', 'diamond']),
        expand(join(config["data_dir"], config["subdirs"]["metagenomics"],
                    "{sample}.{method}.krona.html"), sample=samples, method=['kraken', 'diamond'])
    params: LSF='-N'

method_props = {
    'diamond': {
        'reads_ext': 'diamond.lca.gz',
        'krona_columns': (1, 2),
    },
    'kraken': {
        'reads_ext': 'kraken.reads.gz',
        'krona_columns': (2, 3),
    },
}

rule diamond:
    input: join(config["data_dir"], config["subdirs"]["per_sample"], "{sample}.raw.bam")
    output: report=join(config["data_dir"], config["subdirs"]["metagenomics"], "{sample}.diamond.report"),
            lca=join(config["data_dir"], config["subdirs"]["metagenomics"], "{sample}.diamond.lca.gz")
    resources: cores=int(config.get("number_of_threads", 1)),
               mem=15
    params: numThreads=str(config.get("number_of_threads", 1)),
            UGER=config.get('UGER_queues', {}).get('long', '-q long')
    shell:
        """
        {config[bin_dir]}/metagenomics.py diamond {input} {config[diamond_db]} {config[taxonomy_db]} {output.report} --outLca {output.lca} --numThreads {params.numThreads}
        """

rule kraken:
    input: join(config["data_dir"], config["subdirs"]["per_sample"], "{sample}.raw.bam")
    output: report=join(config["data_dir"], config["subdirs"]["metagenomics"], "{sample}.kraken.report"),
            reads=join(config["data_dir"], config["subdirs"]["metagenomics"], "{sample}.kraken.reads.gz")
    resources: cores=int(config.get("number_of_threads", 1)),
               mem=15
    params: numThreads=str(config.get("number_of_threads", 1)),
            UGER=config.get('UGER_queues', {}).get('long', '-q long')
    shell:
        """
        {config[bin_dir]}/metagenomics.py kraken {input} {config[kraken_db]} --outReads {output.reads} --outReport {output.report} --numThreads {params.numThreads}
        """

rule krona_import_taxonomy:
    input: lambda wildcards: join(config["data_dir"], config["subdirs"]["metagenomics"], \
           ".".join([wildcards.sample, method_props[wildcards.method]['reads_ext']]))
    output: join(config["data_dir"], config["subdirs"]["metagenomics"], "{sample}.{method,\w+}.krona.html")
    run:
        # method_props key can be changed to allow for different tools, 
        # but with new changes Diamond output should look like Kraken output
        # in terms of the location of the two needed columns
        query_col, taxid_col = method_props["kraken"]['krona_columns']
        shell("""
        {config[bin_dir]}/metagenomics.py krona {input} {config[krona_db]} {output} --noRank \
          --queryColumn {query_col}  --taxidColumn {taxid_col}
        """)
